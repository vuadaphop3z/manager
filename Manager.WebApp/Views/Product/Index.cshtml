@using Manager.WebApp.Settings;
@using Manager.WebApp.Models;
@using Manager.WebApp.Resources;
@model Manager.WebApp.Models.ManageProductModel

@{
    ViewBag.Title = ManagerResource.LB_PRODUCT_MANAGE;
}


@Html.Partial("_Notifications")

@Html.Partial("../Widgets/Modals/_DefaultModal")

<div class="m-portlet">
    <!--begin::Form-->
    @RenderSearchForm()
    <!--end::Form-->
</div>

@helper RenderSearchForm()
{
    var productCategories = CommonHelpers.GetListProductCategory();
    var providers = CommonHelpers.GetListProvider();
    using (Html.BeginForm("Index", "Product", FormMethod.Get, new { role = "form", @class = " m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed" }))
    {
        @Html.HiddenFor(m => m.SearchExec)

        <div class="m-portlet__body">
            <div class="form-group m-form__group row">
                <div class="col-lg-3 m-form__group--inline">
                    @Html.LabelFor(m => m.ProviderId, new { @class = "form-control-label" })
                    <select name="@Html.NameFor(m => m.ProviderId)" id="@Html.IdFor(m=>m.ProviderId)" class="form-control selectpicker btn-white" data-live-search="true">
                        <option value="0">--- @ManagerResource.LB_SELECT_PROVIDER ---</option>
                        @if (Model.Providers.HasData())
                        {
                            foreach (var item in providers)
                            {
                                var chkItem = item.Id;
                                var chkStr = string.Empty;
                                if (chkItem == Model.ProviderId)
                                {
                                    chkStr = "selected";
                                }
                                <option value="@chkItem" @chkStr>@item.Name</option>
                            }
                        }
                    </select>
                </div>

                <div class="col-lg-3 m-form__group--inline">
                    @Html.LabelFor(m => m.ProductCategoryId, new { @class = "form-control-label" })
                    <select name="@Html.NameFor(m => m.ProductCategoryId)" id="@Html.IdFor(m=>m.ProductCategoryId)" class="form-control selectpicker btn-white" data-live-search="true">
                        <option value="0">--- @ManagerResource.LB_SELECT_PRODUCT_CATEGORY ---</option>
                        @if (Model.ProductCategories.HasData())
                        {
                            foreach (var item in Model.ProductCategories)
                            {
                                var chkItem = item.Id;
                                var chkStr = string.Empty;
                                if (chkItem == Model.ProductCategoryId)
                                {
                                    chkStr = "selected";
                                }
                                <option value="@chkItem" @chkStr>@item.Name</option>
                            }
                        }
                    </select>
                </div>

                <div class="col-lg-3 m-form__group--inline">
                    @Html.LabelFor(m => m.Status)
                    <select class="form-control" id="@Html.IdFor(m=>m.Status)" name="@Html.NameFor(m=>m.Status)">
                        <option value="-1">
                            @ManagerResource.LB_ALL
                        </option>
                        <option value="1" @(Model.Status == 1 ? "selected" : string.Empty)>
                            @ManagerResource.LB_ACTIVATED
                        </option>
                        <option value="0" @(Model.Status == 0 ? "selected" : string.Empty)>
                            @ManagerResource.LB_LOCKED
                        </option>
                    </select>
                </div>
                <div class="col-lg-3">
                    <label>@ManagerResource.LB_KEYWORD</label>
                    @Html.TextBoxFor(m => m.Keyword, new { @class = "form-control m-input", placeholder = ManagerResource.LB_KEYWORD_SEARCH })
                </div>
            </div>

            <div class="form-group m-form__group row">
                <div class="col-lg-12 m-form__group--inline">
                    <button type="submit" class="btn btn-info">
                        @ManagerResource.LB_SEARCH
                    </button>
                </div>
            </div>
        </div>
    }
}

<div class="space"></div>

<div class="row">
    <div class="col-sm-12">
        <div class="m-portlet">
            <div class="m-portlet__head">
                <div class="m-portlet__head-caption">
                    <div class="m-portlet__head-title">
                        <h3 class="m-portlet__head-text">
                            @ManagerResource.LB_LIST
                        </h3>
                    </div>
                </div>
                <div class="clearfix pull-right m--padding-10">
                    <a class="btn btn-white btn-info" href="@Url.Action("Create", "Product")" title="@ManagerResource.LB_ADDNEW">
                        <i class="la la-plus"></i> @ManagerResource.LB_ADDNEW
                    </a>
                </div>
            </div>
            <div class="m-portlet__body">
                <!--end::Section-->
                <!--begin::Section-->
                <div class="m-section">
                    <div class="m-section__content table-responsive">
                        <table id="sample-table-1" class="table m-table m-table--head-bg-brand table-bordered">
                            <thead>
                                <tr>
                                    <th class="text-center" width="50">#</th>
                                    <th class="text-center">@ManagerResource.LB_CODE (Item code) </th>
                                    <th class="text-center">@ManagerResource.LB_NAME</th>
                                    <th class="text-center">@ManagerResource.LB_PROVIDER</th>
                                    <th class="text-center">@ManagerResource.LB_PRODUCT_CATEGORY</th>
                                    <th class="text-center">@ManagerResource.LB_CREATED_DATE</th>
                                    <th class="text-center">@ManagerResource.LB_WAREHOUSE_STATUS</th>
                                    <th class="text-center">@ManagerResource.LB_MIN_INVENTORY</th>
                                    <th class="text-center">@ManagerResource.LB_STATUS</th>
                                    <th class="text-center">@ManagerResource.LB_ACTION</th>
                                </tr>
                            </thead>

                            <tbody>
                                @if (Model.SearchResults != null && Model.SearchResults.Count > 0)
                                {
                                    var stt = 0;
                                    foreach (var record in Model.SearchResults)
                                    {
                                        stt++;
                                        <tr>
                                            <td class="text-center">@(stt + (Model.CurrentPage - 1) * Model.PageSize) </td>
                                            <td>
                                                @record.Code
                                            </td>
                                            <td>
                                                <b class="">
                                                    @record.Name
                                                </b>
                                            </td>
                                            <td>
                                                @if (Model.Providers.HasData())
                                                {
                                                    var myProvider = Model.Providers.Where(x => x.Id == record.ProviderId).FirstOrDefault();
                                                    if (myProvider != null)
                                                    {
                                                        <span>@myProvider.Name</span>
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @if (Model.ProductCategories.HasData())
                                                {
                                                    var myProductCategory = Model.ProductCategories.Where(x => x.Id == record.ProductCategoryId).FirstOrDefault();
                                                    if (myProductCategory != null)
                                                    {
                                                        <span>@myProductCategory.Name</span>
                                                    }
                                                }
                                            </td>
                                            <td class="text-center">@((record.CreatedDate != null) ? record.CreatedDate.Value.ToString("dd/MM/yyyy HH:mm") : string.Empty)</td>
                                            <td class="text-right">
                                                @if (Model.Units.HasData())
                                                {
                                                    var myUnit = Model.Units.Where(x => x.Id == record.UnitId).FirstOrDefault();
                                                    if (myUnit != null)
                                                    {
                                                        <b title="@ManagerResource.LB_ITEM_REMAINS_IN_WAREHOUSE">@(string.Format("{0} / {1}", Utils.DoubleToStringFormat(record.WarehouseNum), myUnit.Name))</b>
                                                    }
                                                }
                                                else
                                                {
                                                    <b title="@ManagerResource.LB_ITEM_REMAINS_IN_WAREHOUSE">@Utils.DoubleToStringFormat(record.WarehouseNum)</b>
                                                }
                                            </td>
                                            <td class="text-right">
                                                <b>@Utils.DoubleToStringFormat(record.MinInventory)</b>
                                            </td>
                                            <td class="text-center">
                                                @Html.Partial("../Widgets/_Status", record.Status)
                                            </td>
                                            <td class="text-center">
                                                @{
                                                    var newModel = Model;
                                                    newModel.Id = record.Id;
                                                    newModel.SearchExec = "Y";
                                                }
                                                <a class="m-portlet__nav-link btn m-btn m-btn--hover-info m-btn--icon m-btn--icon-only m-btn--pill" href="@Url.Action("Edit", "Product", new { id = record.Id,SearchExec = 'Y',Page = Model.CurrentPage,Keyword = Model.Keyword,Status=Model.Status })" title="@ManagerResource.LB_EDIT">
                                                    <i class="la la-pencil"></i>
                                                </a>
                                                <a class="m-portlet__nav-link btn m-btn m-btn--hover-danger m-btn--icon m-btn--icon-only m-btn--pill" href="@Url.Action("Delete", "Product", new { id = record.Id })" data-modal="" title="@ManagerResource.LB_DELETE">
                                                    <i class="la la-trash"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="11">
                                            @ManagerResource.LB_NO_RECORD
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        @RenderPaging()
                    </div>
                </div>
                <!--end::Section-->
            </div>
            <!--end::Form-->
        </div>
    </div>

</div>

@helper RenderPaging()
{
    <div class="m_datatable m-datatable m-datatable--default m-datatable--brand m-datatable--loaded">
        <div class="m-datatable__pager m-datatable--paging-loaded clearfix">
            @if (Model.WasOverRecordsInPage())
            {

                @Html.BootstrapPager(Model.CurrentPage, index => Url.Action("Index", "Product",
                     new
                     {
                         Page = index,
                         SearchExec = "Y",
                         Keyword = Model.Keyword,
                         Status = Model.Status,
                         ProviderId = Model.ProviderId,
                         ProductCategoryId = Model.ProductCategoryId
                     }),
                     Model.TotalCount, pageSize: Model.PageSize, numberOfLinks: 10)
            }

            @if (Model.TotalCount > 0)
            {
                <div class="m-datatable__pager-info">
                    <span class="m-datatable__pager-detail">
                        @ManagerResource.LB_DISPLAYING @Model.StartCount() @ManagerResource.LB_TO @Model.EndCount(Model.SearchResults.Count()) @ManagerResource.LB_OF @Model.TotalCount @ManagerResource.LB_RECORDS
                    </span>
                </div>
            }
        </div>

    </div>
}







@using Manager.WebApp.Resources
@using Manager.WebApp.Settings
@model Manager.WebApp.Models.CompanyEditModel


@Html.Partial("_Notifications")

@Html.Partial("../Widgets/Modals/_DefaultModal")

<div class="row">
    <div class="col-lg-12">
        <!--begin::Portlet-->
        <div class="m-portlet">
            <div class="m-portlet__head">
                <div class="m-portlet__head-caption">
                    <div class="m-portlet__head-title">
                        <span class="m-portlet__head-icon">
                            <i class="fa fa-edit text-info"></i>
                        </span>
                        <h3 class="m-portlet__head-text">
                            @ManagerResource.LB_UPDATE_INFO
                        </h3>
                    </div>
                </div>
            </div>
            <!--begin::Form-->
            @using (Html.BeginForm("Edit", "Company", FormMethod.Post, new { @class = "m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.Partial("_ValidationSummary", ViewData.ModelState)
                @Html.HiddenFor(m => m.Id)
                <div class="m-portlet__body">
                    <div class="form-group m-form__group row">
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.Code, new { @class = "form-control-label" })
                            @Html.TextBoxFor(m => m.Code, new { @class = "form-control form-control-warning m-input" })
                            @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(m => m.Name, new { @class = "form-control-label" })
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control form-control-warning m-input" })
                            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(m => m.CountryId, new { @class = "form-control-label" })
                            <select name="@Html.NameFor(m => m.CountryId)" id="@Html.IdFor(m=>m.CountryId)" class="form-control selectpicker btn-white" data-live-search="true">
                                <option value="0">--- Chọn nước ---</option>
                                @if (Model.Countrys.HasData())
                                {
                                    foreach (var item in Model.Countrys)
                                    {
                                        var chkItem = item.Id;
                                        var chkStr = string.Empty;
                                        if (chkItem == Model.CountryId)
                                        {
                                            chkStr = "selected";
                                        }
                                        <option value="@chkItem" @chkStr>@item.Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(m => m.ProvinceId, new { @class = "form-control-label" })
                            <select name="@Html.NameFor(m => m.ProvinceId)" id="@Html.IdFor(m=>m.ProvinceId)" class="form-control selectpicker btn-white" data-live-search="true">
                                <option value="0">--- Chọn Tỉnh ---</option>
                                @if (Model.Provinces.HasData())
                                {
                                    foreach (var item in Model.Provinces)
                                    {
                                        var chkItem = item.Id;
                                        var chkStr = string.Empty;
                                        if (chkItem == Model.ProvinceId)
                                        {
                                            chkStr = "selected";
                                        }
                                        <option value="@chkItem" @chkStr>@item.Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(m => m.DistrictId, new { @class = "form-control-label" })
                            <select name="@Html.NameFor(m => m.DistrictId)" id="@Html.IdFor(m=>m.DistrictId)" class="form-control selectpicker btn-white" data-live-search="true">
                                <option value="0">--- Chon Huyện ---</option>
                                @if (Model.Districts.HasData())
                                {
                                    foreach (var item in Model.Districts)
                                    {
                                        var chkItem = item.Id;
                                        var chkStr = string.Empty;
                                        if (chkItem == Model.DistrictId)
                                        {
                                            chkStr = "selected";
                                        }
                                        <option value="@chkItem" @chkStr>@item.Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-4">
                            @Html.LabelFor(m => m.Address, new { @class = "form-control-label" })
                            @Html.TextBoxFor(m => m.Address, new { @class = "form-control form-control-warning m-input" })
                            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(m => m.Email, new { @class = "form-control-label" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-warning m-input" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.Phone, new { @class = "form-control-label" })
                            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control form-control-warning m-input", type = "tel" })
                            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(m => m.IsEPE, new { @class = "form-control-label" })
                            <div class="m-checkbox-inline">
                                <label class="m-checkbox">
                                    <input name="@Html.NameFor(m => m.IsEPE)" @((Model.IsEPE == true) ? "checked" : null) value="true" type="checkbox">
                                    <span></span>
                                </label>
                            </div>
                        </div>
                        @*<div class="col-md-4">
                                @Html.LabelFor(m => m.Name, new { @class = "form-control-label" })
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control form-control-warning m-input" })
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2">
                                @Html.LabelFor(m => m.Code, new { @class = "form-control-label" }) (Item Code)
                                @Html.TextBoxFor(m => m.Code, new { @class = "form-control form-control-warning m-input" })
                                @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-3">
                                @Html.LabelFor(m => m.ProviderId, new { @class = "form-control-label" })
                                <select name="@Html.NameFor(m => m.ProviderId)" id="@Html.IdFor(m=>m.ProviderId)" class="form-control selectpicker btn-white" data-live-search="true">
                                    <option value="0">--- @ManagerResource.LB_SELECT_PROVIDER ---</option>
                                    @if (Model.Providers.HasData())
                                    {
                                        foreach (var item in Model.Providers)
                                        {
                                            var chkItem = item.Id;
                                            var chkStr = string.Empty;
                                            if (chkItem == Model.ProviderId)
                                            {
                                                chkStr = "selected";
                                            }
                                            <option value="@chkItem" @chkStr>@item.Name</option>
                                        }
                                    }
                                </select>
                            </div>

                            <div class="col-md-3">
                                @Html.LabelFor(m => m.ProductCategoryId, new { @class = "form-control-label" })
                                <select name="@Html.NameFor(m => m.ProductCategoryId)" id="@Html.IdFor(m=>m.ProductCategoryId)" class="form-control selectpicker btn-white" data-live-search="true">
                                    <option value="0">--- @ManagerResource.LB_SELECT_PRODUCT_CATEGORY ---</option>
                                    @if (Model.ProductCategories.HasData())
                                    {
                                        foreach (var item in Model.ProductCategories)
                                        {
                                            var chkItem = item.Id;
                                            var chkStr = string.Empty;
                                            if (chkItem == Model.ProductCategoryId)
                                            {
                                                chkStr = "selected";
                                            }
                                            <option value="@chkItem" @chkStr>@item.Name</option>
                                        }
                                    }
                                </select>
                            </div>*@
                    </div>
                    <div class="form-group m-form__group row">
                        @*<div class="col-md-2">
                                @Html.LabelFor(m => m.MinInventory, new { @class = "form-control-label" })
                                @Html.TextBoxFor(m => m.MinInventory, new { @class = "form-control form-control-warning m-input text-right number-format" })
                            </div>

                            <div class="col-md-2">
                                @Html.LabelFor(m => m.UnitId, new { @class = "form-control-label" })
                                <select name="@Html.NameFor(m => m.UnitId)" id="@Html.IdFor(m=>m.UnitId)" class="form-control selectpicker btn-white" data-live-search="true">
                                    <option value="0">--- @ManagerResource.LB_UNIT_SELECT ---</option>
                                    @if (Model.Units.HasData())
                                    {
                                        foreach (var item in Model.Units)
                                        {
                                            var chkItem = item.Id;
                                            var chkStr = string.Empty;
                                            if (chkItem == Model.UnitId)
                                            {
                                                chkStr = "selected";
                                            }
                                            <option value="@chkItem" @chkStr>@item.Name</option>
                                        }
                                    }
                                </select>
                            </div>*@
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.Status, new { @class = "form-control-label" })
                            <div class="m-checkbox-inline">
                                <label class="m-checkbox">
                                    <input name="@Html.NameFor(m => m.Status)" @((Model.Status == 1) ? "checked" : null) value="1" type="checkbox">
                                    @ManagerResource.LB_ACTIVE
                                    <span></span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="m-portlet__foot m-portlet__no-border m-portlet__foot--fit">
                    <div class="m-form__actions m-form__actions--solid">
                        <div class="row">
                            <div class="col-lg-6">
                                <a class="btn btn-danger" href="@Url.Action("Index", "Company")"><i class="la la-backward"></i> @ManagerResource.LB_GOBACK</a>
                                <button type="submit" class="btn btn-info">
                                    @ManagerResource.LB_SAVE
                                </button>
                            </div>
                            <div class="col-lg-6 m--align-right">
                                <button type="reset" class="btn btn-danger">
                                    @ManagerResource.LB_RESET
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <!--end::Form-->
        </div>
        <!--end::Portlet-->
    </div>
</div>

@section PagePluginStyles
{

}

@section PagePluginScripts
 {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        InitNumberFormat();
    </script>

    <script>
        $(document).ready(function () {
            $("#CountryId").change(function () {
                $("#DistrictId").find("option").not(':first').remove();
                $("#DistrictId").selectpicker('refresh');
                $.ajax({
                    method: 'GET',
                    url: '/Area/GetProvinceByCountry',
                    data: { countryId: $("#CountryId").val() },
                    success: function (result) {
                        $("#ProvinceId").html(result.data).selectpicker('refresh');
                    }
                });
            });
        });

        $(document).ready(function () {
            $("#ProvinceId").change(function () {
                $.ajax({
                    method: 'GET',
                    url: '/Area/GetDistrictByProvince',
                    data: { provinceId: $("#ProvinceId").val() },
                    success: function (result) {
                        $("#DistrictId").html(result.data).selectpicker('refresh');
                    }
                });
            });
        });

    </script>

}

